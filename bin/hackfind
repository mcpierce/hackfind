#!/usr/bin/env python
#
# Copyright (C) 2016 Darryl L. Pierce <mcpierce@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from __future__ import print_function

import getopt, sys
from hackfind import Model, Report

def usage():
    print("USAGE: hackfind -i INFILE -o OUTFILE OPTIONS\n")
    print("  INFILE  - the router log file")
    print("  OUTFILE - the report file")
    print("\nOPTIONS:")
    print("  -a, --allports     include all ports")
    print("  -p, --port=[PORT]  include attempts that target PORT")
    print(" --totals            only report totals")
    print("  -h, --help         show this help information")

ofile = cfile = ""
include_ports = [22]

try:
    opts, args = getopt.getopt(sys.argv[1:], "i:o:tp:h",
                               [
                                   "input=",
                                   "output=",
                                   "port=",
                                   "help"
                               ])
except getopt.GetoptError as err:
    print(str(err))
    usage()
    sys.exit(2)

for o, a in opts:
    if o in ("-h", "--help"):
        usage()
        sys.exit(0)
    elif o in ("-i", "--input"):
        ifile = a
    elif o in ("-o", "--output"):
        ofile = a
    elif o in ("-p", "--port"):
        include_ports.append(int(a))
    else:
        assert False, "invalid option: %s" % o

if len(ifile) == 0:
    die("missing or invalid filename: %s" % ifile)

model = Model(ifile)
model.process_input()

report = Report(ofile)
report.write_output(model)
